// <auto-generated />
using System;
using Liyanjie.JsonQL.Sample.AspNetCore;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Liyanjie.JsonQL.Sample.AspNetCore.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.0.0");

            modelBuilder.Entity("Liyanjie.JsonQL.Sample.AspNetCore.Order", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset>("CreateTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("Serial")
                        .HasColumnType("TEXT");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("UserId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("Liyanjie.JsonQL.Sample.AspNetCore.OrderStatusChange", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset>("CreateTime")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("OrderId")
                        .HasColumnType("TEXT");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderStatusChanges");
                });

            modelBuilder.Entity("Liyanjie.JsonQL.Sample.AspNetCore.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset>("CreateTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Liyanjie.JsonQL.Sample.AspNetCore.UserAccount", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Coins")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Points")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("UserAccounts");
                });

            modelBuilder.Entity("Liyanjie.JsonQL.Sample.AspNetCore.UserAccountRecord", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Coins")
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset>("CreateTime")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Points")
                        .HasColumnType("TEXT");

                    b.Property<string>("Remark")
                        .HasColumnType("TEXT")
                        .HasMaxLength(50);

                    b.Property<Guid>("UserId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserAccountRecords");
                });

            modelBuilder.Entity("Liyanjie.JsonQL.Sample.AspNetCore.UserProfile", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("Avatar")
                        .HasColumnType("TEXT")
                        .HasMaxLength(50);

                    b.Property<string>("Nick")
                        .HasColumnType("TEXT")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("UserProfiles");
                });

            modelBuilder.Entity("Liyanjie.JsonQL.Sample.AspNetCore.Order", b =>
                {
                    b.HasOne("Liyanjie.JsonQL.Sample.AspNetCore.User", "User")
                        .WithMany("Orders")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Liyanjie.JsonQL.Sample.AspNetCore.OrderStatusChange", b =>
                {
                    b.HasOne("Liyanjie.JsonQL.Sample.AspNetCore.Order", "Order")
                        .WithMany("StatusChanges")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Liyanjie.JsonQL.Sample.AspNetCore.UserAccount", b =>
                {
                    b.HasOne("Liyanjie.JsonQL.Sample.AspNetCore.User", "User")
                        .WithOne("Account")
                        .HasForeignKey("Liyanjie.JsonQL.Sample.AspNetCore.UserAccount", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Liyanjie.JsonQL.Sample.AspNetCore.UserAccountRecord", b =>
                {
                    b.HasOne("Liyanjie.JsonQL.Sample.AspNetCore.User", "User")
                        .WithMany("AccountRecords")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Liyanjie.JsonQL.Sample.AspNetCore.UserProfile", b =>
                {
                    b.HasOne("Liyanjie.JsonQL.Sample.AspNetCore.User", "User")
                        .WithOne("Profile")
                        .HasForeignKey("Liyanjie.JsonQL.Sample.AspNetCore.UserProfile", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
